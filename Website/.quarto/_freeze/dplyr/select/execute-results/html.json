{
  "hash": "75ff666ba2255d169c65277da2863972",
  "result": {
    "markdown": "---\ntitle: \"Select\"\n---\n\n\n<center>\n![](images/dplyr_select.png){style=\"width:200px\"}\n</center>\n\nThe function `dplyr::select()` allows you to select columns from a __tibble__.\nThere are many different ways to do this with various helper functions.\n\nWhen subsetting with `dplyr::select()` the resulting object will always be a __tibble__.\n\n[Tidyverse reference page](https://dplyr.tidyverse.org//reference/select.html)\n\n## Dataset\n\nFor demonstration we'll load the `mammal_sleep_tbl` data from the [mgrtibbles package](/datasets/mgrtibbles.qmd) (hyperlink includes install instructions). For easier viewing we'll subset it so it only has 5 rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load package\nlibrary(\"mgrtibbles\")\n#mammal_sleep_tbl tibble for demonstration\nmammal_sleep_tbl<- mgrtibbles::mammal_sleep_tbl |> dplyr::slice(1:5)\nmammal_sleep_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 11\n  species body_wt brain_wt non_dreaming dreaming total_sleep life_span gestation\n  <chr>     <dbl>    <dbl>        <dbl>    <dbl>       <dbl>     <dbl>     <dbl>\n1 Africa… 6654      5.71           NA       NA           3.3      38.6       645\n2 Africa…    1      0.0066          6.3      2           8.3       4.5        42\n3 Arctic…    3.38   0.0445         NA       NA          12.5      14          60\n4 Arctic…    0.92   0.0057         NA       NA          16.5      NA          25\n5 Asiane… 2547      4.60            2.1      1.8         3.9      69         624\n# ℹ 3 more variables: predation <fct>, exposure <fct>, danger <fct>\n```\n:::\n:::\n\n\n## One column\n\nSelect one column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(dreaming)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  dreaming\n     <dbl>\n1     NA  \n2      2  \n3     NA  \n4     NA  \n5      1.8\n```\n:::\n:::\n\n\n## Multiple columns\n\nSelect multiple columns individually.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(species,dreaming,gestation)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  species                dreaming gestation\n  <chr>                     <dbl>     <dbl>\n1 Africanelephant            NA         645\n2 Africangiantpouchedrat      2          42\n3 ArcticFox                  NA          60\n4 Arcticgroundsquirrel       NA          25\n5 Asianelephant               1.8       624\n```\n:::\n:::\n\n\n## Consecutive range of columns\n\nSelect a consecutive range of columns using the first and last column names of the range.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(dreaming:gestation)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  dreaming total_sleep life_span gestation\n     <dbl>       <dbl>     <dbl>     <dbl>\n1     NA           3.3      38.6       645\n2      2           8.3       4.5        42\n3     NA          12.5      14          60\n4     NA          16.5      NA          25\n5      1.8         3.9      69         624\n```\n:::\n:::\n\n\n## Numeric indexes\n\nNumeric indexes can be used for column selection.\n\nSelect the first column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  species               \n  <chr>                 \n1 Africanelephant       \n2 Africangiantpouchedrat\n3 ArcticFox             \n4 Arcticgroundsquirrel  \n5 Asianelephant         \n```\n:::\n:::\n\n\nSelect columns 3:5.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(3:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  brain_wt non_dreaming dreaming\n     <dbl>        <dbl>    <dbl>\n1   5.71           NA       NA  \n2   0.0066          6.3      2  \n3   0.0445         NA       NA  \n4   0.0057         NA       NA  \n5   4.60            2.1      1.8\n```\n:::\n:::\n\n\nSelect columns 4, 7,and 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(c(4,7,2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  non_dreaming life_span body_wt\n         <dbl>     <dbl>   <dbl>\n1         NA        38.6 6654   \n2          6.3       4.5    1   \n3         NA        14      3.38\n4         NA        NA      0.92\n5          2.1      69   2547   \n```\n:::\n:::\n\n\nSelect all but the 6th column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(-6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 10\n  species   body_wt brain_wt non_dreaming dreaming life_span gestation predation\n  <chr>       <dbl>    <dbl>        <dbl>    <dbl>     <dbl>     <dbl> <fct>    \n1 Africane… 6654      5.71           NA       NA        38.6       645 3        \n2 Africang…    1      0.0066          6.3      2         4.5        42 3        \n3 ArcticFox    3.38   0.0445         NA       NA        14          60 1        \n4 Arcticgr…    0.92   0.0057         NA       NA        NA          25 5        \n5 Asianele… 2547      4.60            2.1      1.8      69         624 3        \n# ℹ 2 more variables: exposure <fct>, danger <fct>\n```\n:::\n:::\n\n\n## Last column\n\nSelect the last column with `last_col()` helper function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(last_col())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  danger\n  <fct> \n1 3     \n2 3     \n3 1     \n4 3     \n5 4     \n```\n:::\n:::\n\n\nSelect the fourth last column (i.e. 3 spaces from the last column).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(last_col(3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  gestation\n      <dbl>\n1       645\n2        42\n3        60\n4        25\n5       624\n```\n:::\n:::\n\n\nSelect the last 3 columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(last_col(2):last_col())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  predation exposure danger\n  <fct>     <fct>    <fct> \n1 3         5        3     \n2 3         1        3     \n3 1         1        1     \n4 5         2        3     \n5 3         5        4     \n```\n:::\n:::\n\n\n## Starts with\n\nSelect columns using a prefix of the column names to extract with the `starts_with()` helper function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(starts_with(\"b\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  body_wt brain_wt\n    <dbl>    <dbl>\n1 6654      5.71  \n2    1      0.0066\n3    3.38   0.0445\n4    0.92   0.0057\n5 2547      4.60  \n```\n:::\n:::\n\n\n## Ends with\n\nSelect columns using a prefix of the column names to extract with the `ends_with()` helper function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(ends_with(\"dreaming\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  non_dreaming dreaming\n         <dbl>    <dbl>\n1         NA       NA  \n2          6.3      2  \n3         NA       NA  \n4         NA       NA  \n5          2.1      1.8\n```\n:::\n:::\n\n\n## Contains\n\nSelect columns using a string the column names will contain with the `contains()` helper function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(contains(\"in\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  brain_wt non_dreaming dreaming\n     <dbl>        <dbl>    <dbl>\n1   5.71           NA       NA  \n2   0.0066          6.3      2  \n3   0.0445         NA       NA  \n4   0.0057         NA       NA  \n5   4.60            2.1      1.8\n```\n:::\n:::\n\n\n## Matches\n\nThe `matches()` function is similar to the above `contains()` function but it can be used to select with regular expressions.\n\nIn the below example we use `[]` to mean one of the letters within them. In other words `[eu]r` means __\"er\"__ or __\"ur\"__.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(matches(\"[eu]r\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 2\n  exposure danger\n  <fct>    <fct> \n1 5        3     \n2 1        3     \n3 1        1     \n4 2        3     \n5 5        4     \n```\n:::\n:::\n\n\nAnother example where `s[lp]` mean __\"sl\"__ or __\"sp\"__.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(matches(\"s[lp]\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  species                total_sleep life_span\n  <chr>                        <dbl>     <dbl>\n1 Africanelephant                3.3      38.6\n2 Africangiantpouchedrat         8.3       4.5\n3 ArcticFox                     12.5      14  \n4 Arcticgroundsquirrel          16.5      NA  \n5 Asianelephant                  3.9      69  \n```\n:::\n:::\n\n\n## Combine with `c()`\n\nYou can combine many of the methods above with `c()`.\n\nSelect the species column and the last three columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(\n    c(species,last_col(2):last_col())\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  species                predation exposure danger\n  <chr>                  <fct>     <fct>    <fct> \n1 Africanelephant        3         5        3     \n2 Africangiantpouchedrat 3         1        3     \n3 ArcticFox              1         1        1     \n4 Arcticgroundsquirrel   5         2        3     \n5 Asianelephant          3         5        4     \n```\n:::\n:::\n\n\nSelect the species column, the columns containing dreaming, and the 6th to 7th columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_tbl |> dplyr::select(\n    c(species, contains(\"dreaming\"),6:7)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  species                non_dreaming dreaming total_sleep life_span\n  <chr>                         <dbl>    <dbl>       <dbl>     <dbl>\n1 Africanelephant                NA       NA           3.3      38.6\n2 Africangiantpouchedrat          6.3      2           8.3       4.5\n3 ArcticFox                      NA       NA          12.5      14  \n4 Arcticgroundsquirrel           NA       NA          16.5      NA  \n5 Asianelephant                   2.1      1.8         3.9      69  \n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}