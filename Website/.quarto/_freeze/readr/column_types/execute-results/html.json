{
  "hash": "1389218d317693ec380e0b16ef5a78d7",
  "result": {
    "markdown": "---\ntitle: \"Column types\"\n---\n\n\n<center>\n![](images/readr_column_types.png){style=\"width:200px\"}\n</center>\n\nWhen reading in a file with `readr::delim()` the function will try to infer the type/class of data in each column.\n\nMore info on __tibbles__ and data classes in the [tibble structure page](/tibble/structure.qmd#variablescolumns).\n\nInferring the column types is not always correct and you can choose the column types with the `col_types=` option of the `reader::read_delim()` function.\n\nColumn types can be specified with a compact string of single character representations.\nEach character represents the type of each column, with a number of strings equal to the number of columns (examples below).\nThe characters and their data type are:\n\n- c = character\n- i = integer\n- n = number\n- d = double\n- l = logical\n- f = factor\n- D = date\n- T = date time\n- t = time\n- ? = guess\n- _ or - = skip\n\n## Data\n\n::: {.cell}\n\n:::\n\n\nWe'll read in a the file [simple_example.csv](https://neof-workshops.github.io/Tidyverse/data/simple_example.csv) to first specify column types.\n\n### Check file contents\n\nView the file contents before reading it as a __tibble__.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadLines(\"https://neof-workshops.github.io/Tidyverse/data/simple_example.csv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Integers,Doubles,Characters,Factors,Logicals\"\n[2] \"101,0.345,One,A,TRUE\"                        \n[3] \"21,3.14,sentence,B,TRUE\"                     \n[4] \"3,78.9,is,B,FALSE\"                           \n[5] \"0,20000.9,enough,A,FALSE\"                    \n```\n:::\n:::\n\n\n## Specify column types\n\nRead in the file specifying the column types.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadr::read_delim(\n    file = \"https://neof-workshops.github.io/Tidyverse/data/simple_example.csv\",\n    delim = \",\", \n    col_types = \"idcfl\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  Integers   Doubles Characters Factors Logicals\n     <int>     <dbl> <chr>      <fct>   <lgl>   \n1      101     0.345 One        A       TRUE    \n2       21     3.14  sentence   B       TRUE    \n3        3    78.9   is         B       FALSE   \n4        0 20001.    enough     A       FALSE   \n```\n:::\n:::\n\n\n## Default inference\n\nBy default the `readr::read_delim()` will infer the data types of the columns.\nIf using this method it is always important to ensure the column types are what you want before further analysis.\n\n### Inference with message\n\nRead in the file and leave `col_types()` to the default inference method (i.e. do not specify the option).\n\nNote there is information on the Column specifications between the Row and Column amounts and the __tibble__ itself.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadr::read_delim(\n    file = \"https://neof-workshops.github.io/Tidyverse/data/simple_example.csv\",\n    delim = \",\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 4 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Characters, Factors\ndbl (2): Integers, Doubles\nlgl (1): Logicals\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  Integers   Doubles Characters Factors Logicals\n     <dbl>     <dbl> <chr>      <chr>   <lgl>   \n1      101     0.345 One        A       TRUE    \n2       21     3.14  sentence   B       TRUE    \n3        3    78.9   is         B       FALSE   \n4        0 20001.    enough     A       FALSE   \n```\n:::\n:::\n\n\nOverall it is fairly good but it has:\n\n- Set the __Integers__ column to doubles. Doubles are a safer option to set numbers to than integers (doubles can have decimal points whilst integers cannot). However, in data science we may work with data that we want in whole numbers and therefore want the column to be an integer column, ie. discrete data. Examples of discrete data include number of individuals, items, or game points.\n- Set the __Factors__ column to the characters. Our factors are words which are interpreted as strings.\n\n### Inference without message\n\nI do not find the column specification message to be that useful.\nYou can quiet the message by setting the option `show_col_types = FALSE`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadr::read_delim(\n    file = \"https://neof-workshops.github.io/Tidyverse/data/simple_example.csv\",\n    delim = \",\",\n    show_col_types = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  Integers   Doubles Characters Factors Logicals\n     <dbl>     <dbl> <chr>      <chr>   <lgl>   \n1      101     0.345 One        A       TRUE    \n2       21     3.14  sentence   B       TRUE    \n3        3    78.9   is         B       FALSE   \n4        0 20001.    enough     A       FALSE   \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}