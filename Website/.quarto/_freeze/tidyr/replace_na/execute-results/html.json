{
  "hash": "b645aea73777592bc3dfd83b7bfb41b1",
  "result": {
    "markdown": "---\ntitle: \"Replace NA\"\n---\n\n\n<center>\n![](images/tidyr_replace_na.png){style=\"width:200px\"}\n</center>\n\nIt is common to have NAs in your data. \nHowever, sometimes instead of removing them you may want to replace them.\nbelow are three methods to carry this out.\n\n- Replace all NAs in a column with a specific value with `tidyr::replace_na()`. A common example is to replace all NAs with 0.\n- Use the corresponding value of another column to replace NAs. \n\n[Tidyverse reference page](https://tidyr.tidyverse.org//reference/replace_na.html)\n\n## Dataset\n\nFor demonstration we'll load the `mammal_sleep_tbl` data from the [mgrtibbles package](/datasets/mgrtibbles.qmd) (hyperlink includes install instructions). Additionally, we'll subset it to:\n\n- Keep the first ten rows with at least one NA.\n- COlumns species to life_span\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Load package\nlibrary(\"mgrtibbles\")\n#mammal_sleep_tbl tibble for demonstration\n#Subset to only keep rows with at least one NA\nmammal_sleep_na_tbl <- mgrtibbles::mammal_sleep_tbl[!complete.cases(mammal_sleep_tbl),] |>\n    #Slice to keep first ten rows and select columns species to life_span\n    dplyr::slice(1:10) |> dplyr::select(species:life_span)\n#View tibble\nmammal_sleep_na_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 7\n   species          body_wt brain_wt non_dreaming dreaming total_sleep life_span\n   <chr>              <dbl>    <dbl>        <dbl>    <dbl>       <dbl>     <dbl>\n 1 Africanelephant  6654      5.71           NA       NA           3.3      38.6\n 2 ArcticFox           3.38   0.0445         NA       NA          12.5      14  \n 3 Arcticgroundsqu…    0.92   0.0057         NA       NA          16.5      NA  \n 4 Deserthedgehog      0.55   0.0024          7.6      2.7        10.3      NA  \n 5 Donkey            187.     0.419          NA       NA           3.1      40  \n 6 Genet               1.41   0.0175          4.8      1.3         6.1      34  \n 7 Giantarmadillo     60      0.081          12        6.1        18.1       7  \n 8 Giraffe           529      0.68           NA        0.3        NA        28  \n 9 Gorilla           207      0.406          NA       NA          12        39.3\n10 Graywolf           36.3    0.120          NA       NA          13        16.2\n```\n:::\n:::\n\n\n## Replace with a value\n\nReplace NAs in specified columns with `tidyr::replace_na()`.\n\nWhen used with a __tibble__/__data.frame__ the function needs to be provided with a __list__.\nThe list contains the column names and the replacement value.\n\n### One column\n\nReplaces NAs in the `dreaming` column with 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_na_tbl |>\n    tidyr::replace_na(list(dreaming=0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 7\n   species          body_wt brain_wt non_dreaming dreaming total_sleep life_span\n   <chr>              <dbl>    <dbl>        <dbl>    <dbl>       <dbl>     <dbl>\n 1 Africanelephant  6654      5.71           NA        0           3.3      38.6\n 2 ArcticFox           3.38   0.0445         NA        0          12.5      14  \n 3 Arcticgroundsqu…    0.92   0.0057         NA        0          16.5      NA  \n 4 Deserthedgehog      0.55   0.0024          7.6      2.7        10.3      NA  \n 5 Donkey            187.     0.419          NA        0           3.1      40  \n 6 Genet               1.41   0.0175          4.8      1.3         6.1      34  \n 7 Giantarmadillo     60      0.081          12        6.1        18.1       7  \n 8 Giraffe           529      0.68           NA        0.3        NA        28  \n 9 Gorilla           207      0.406          NA        0          12        39.3\n10 Graywolf           36.3    0.120          NA        0          13        16.2\n```\n:::\n:::\n\n\n### Multiple columns\n\nReplaces:\n\n- NAs in the `dreaming` column with 0.\n- NAs in the `life_span` column with 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_na_tbl |>\n    tidyr::replace_na(list(dreaming=0, life_span=1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 7\n   species          body_wt brain_wt non_dreaming dreaming total_sleep life_span\n   <chr>              <dbl>    <dbl>        <dbl>    <dbl>       <dbl>     <dbl>\n 1 Africanelephant  6654      5.71           NA        0           3.3      38.6\n 2 ArcticFox           3.38   0.0445         NA        0          12.5      14  \n 3 Arcticgroundsqu…    0.92   0.0057         NA        0          16.5       1  \n 4 Deserthedgehog      0.55   0.0024          7.6      2.7        10.3       1  \n 5 Donkey            187.     0.419          NA        0           3.1      40  \n 6 Genet               1.41   0.0175          4.8      1.3         6.1      34  \n 7 Giantarmadillo     60      0.081          12        6.1        18.1       7  \n 8 Giraffe           529      0.68           NA        0.3        NA        28  \n 9 Gorilla           207      0.406          NA        0          12        39.3\n10 Graywolf           36.3    0.120          NA        0          13        16.2\n```\n:::\n:::\n\n\n### Vector\n\nthe `replace_na()` function can be used with vectors.\nIn this case the function only needs to value to be replace NAs with.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_na_tbl |>\n    #Pull out non_dreaming column as a vector\n    dplyr::pull(non_dreaming) |>\n    #Replace NAs with 0\n    tidyr::replace_na(0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  0.0  0.0  0.0  7.6  0.0  4.8 12.0  0.0  0.0  0.0\n```\n:::\n:::\n\n\n## Replace with other column\n\nNAs can be replaced with the corresponding value in another column. This carried out with the following functions:\n\n- [`dplyr::mutate`](/dplyr/mutate.qmd): Mutate columns to create new columns based on existing ones, modify existing columns, and delete columns.\n- [`dplyr::coalesce`](https://dplyr.tidyverse.org//reference/coalesce.html): Finds the first non-missing value at each point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_na_tbl |>\n    dplyr::mutate(dreaming = dplyr::coalesce(dreaming, total_sleep))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 7\n   species          body_wt brain_wt non_dreaming dreaming total_sleep life_span\n   <chr>              <dbl>    <dbl>        <dbl>    <dbl>       <dbl>     <dbl>\n 1 Africanelephant  6654      5.71           NA        3.3         3.3      38.6\n 2 ArcticFox           3.38   0.0445         NA       12.5        12.5      14  \n 3 Arcticgroundsqu…    0.92   0.0057         NA       16.5        16.5      NA  \n 4 Deserthedgehog      0.55   0.0024          7.6      2.7        10.3      NA  \n 5 Donkey            187.     0.419          NA        3.1         3.1      40  \n 6 Genet               1.41   0.0175          4.8      1.3         6.1      34  \n 7 Giantarmadillo     60      0.081          12        6.1        18.1       7  \n 8 Giraffe           529      0.68           NA        0.3        NA        28  \n 9 Gorilla           207      0.406          NA       12          12        39.3\n10 Graywolf           36.3    0.120          NA       13          13        16.2\n```\n:::\n:::\n\n\n## Replace all NAs\n\nAll NAs can be replaced with a value using base R's `is.na()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmammal_sleep_na_tbl[is.na(mammal_sleep_na_tbl)] <- 0\nmammal_sleep_na_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 7\n   species          body_wt brain_wt non_dreaming dreaming total_sleep life_span\n   <chr>              <dbl>    <dbl>        <dbl>    <dbl>       <dbl>     <dbl>\n 1 Africanelephant  6654      5.71            0        0           3.3      38.6\n 2 ArcticFox           3.38   0.0445          0        0          12.5      14  \n 3 Arcticgroundsqu…    0.92   0.0057          0        0          16.5       0  \n 4 Deserthedgehog      0.55   0.0024          7.6      2.7        10.3       0  \n 5 Donkey            187.     0.419           0        0           3.1      40  \n 6 Genet               1.41   0.0175          4.8      1.3         6.1      34  \n 7 Giantarmadillo     60      0.081          12        6.1        18.1       7  \n 8 Giraffe           529      0.68            0        0.3         0        28  \n 9 Gorilla           207      0.406           0        0          12        39.3\n10 Graywolf           36.3    0.120           0        0          13        16.2\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}