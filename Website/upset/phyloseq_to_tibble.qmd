# Phyloseq to long presence tibble

We need to create a long tibble containing data on all the Phyla and the samples they are present in.
To carry this out we:

- Extract the phyloseq object's abundance table as a tibble.
- Longify the tibble so there is a row for each phylum and sample pair with its corresponding abundance value.
- Remove rows were the abundance is 0. This retains rows where the phylum is present in the sample.

We use a [tibble](https://neof-workshops.github.io/Tidyverse/tibble/tibble.html) due to the useage of some specific __tidyverse__ commands in downstream steps.

## Otu_table to tibble

To extract the __otu_table__ as a __tibble__ we can use the `microbiome` package with its function `otu_tibble()`.

```{r, eval=FALSE}
#Extract abundance table as tibble
phyla_tibble <- phylum_pseq |>
    #The row names (taxa in otu_table) become a column in tibble
    # therefore give the resulting column a name/id of "Phylum"
    microbiome::otu_tibble(column.id = "Phylum")
#Display first 10 rows and columns of resulting tibble
phyla_df[1:10,1:10]
```

## Longify

The next step is to longify the __tibble__ with `tidyr::pivot_longer()`.

For our long __tibble__ we want to:

- Longify all the columns except the __Phylum__ column (`!Phylum`).
- Make a column with the sample names, the column names of `phyla_tibble`, called "Sample" (`names_to="Sample"`).
- Make a column with the abundance values, values in tibble, called "Abundance" (`values_to="Abundance"`)

```{r, eval=FALSE}
#Time to longify
phyla_tibble_long <- phyla_tibble |>
    tidyr::pivot_longer(!Phylum, names_to="Sample", values_to="Abundance")
#Display first 10 rows of resulting long tibble
phyla_tibble_long |> dplyr::slice(1:10)
```

Currently all abundance values in the first 10 rows are all zeros.
We will remove these rows next.

## Remove absence

The upset plots we will create will show the intersection of taxa presence.
We will therefore remove ros were the abundance is equal to zero as these rows represent absence.
If we did not remove these rows they would be included in the upset plot creation.

```{r, eval=FALSE}
#Remove rows with 0 values
phyla_tibble_long <- dplyr::filter(phyla_tibble_long, Abundance > 0)
#Display first 10 rows of resulting long tibble
phyla_tibble_long |> dplyr::slice(1:10)
```