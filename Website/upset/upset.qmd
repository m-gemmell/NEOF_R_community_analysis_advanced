---
title: "Upset"
---

<center>
![](images/upset_plot_icon.png){style="width:300px; background: white; border-radius:15px; border:5px white solid"}
</center>

Upset plots are a visualisation method to display __intersections__ between __sets__.
They can be seen as a different form of a venn diagram but are able to effectively display many __intersecting sets__.

In this section we will:

- Introduce the concept of intersecting sets and displaying them with venn and upset plots.
- Setup our environment and introduce the dataset
- Format the data from a phyloseq object to a __tibble__ for upset plot creation
- Create & customise upset plots

## Intersecting sets
<center>
![](images/intersection.png){style="width:200px; background: white; border-radius:15px; border:5px white solid"}
</center>

Intersection plots for community analysis can be used to display the number of intersecting features (e.g. taxa) between samples or sample groups.
In other words you can display the shared presence of features between groups.

Additionally, you can flip it around to display the number of intersecting groups between taxa.
This allows you to determine which taxa are common and uncommon across the groups.
We will see this later on.

## Venn versus Upset

Venn diagrams and upset plots display the __intersections__ between __sets__.
To demonstrate the concept of __intersecting sets__ this section includes a few examples of these plots.
These plots will display:

- __Sets__ of samples (e.g. S1, S2, & S3).
- The __intersection__ of phyla.

```{r, echo=FALSE, message=FALSE}
#Data for venn and upset plots
#if (!require(devtools)) install.packages("devtools")
#devtools::install_github("gaospecial/ggVennDiagram")
library("ggVennDiagram")
library("tidyverse")
library("ggupset")
#Vector of 10 phyla to subsample from
phyla <- c(letters)
#Set seed for sample
set.seed(754628)
Phyla <- list(S1 = sample(phyla,15),
            S2 = sample(phyla,12),
            S3 = sample(phyla, 18),
            S4 = sample(phyla, 14))
set.seed(NULL)
```

### 3 way venn diagram

Three way venn digrams are a classic for visualising __intersecting sets__.
Below is an example showing the number of __intersecting__ phyla across three sets of samples (S1, S2, & S3).

```{r, echo=FALSE, warning=FALSE}
#Venn diagram
ggsave("images/3_way_venn.png", ggVennDiagram::ggVennDiagram(Phyla[1:3]),
        device="png", units="mm", width=130, height=125, dpi=300)
```

<center>
![](images/3_way_venn.png){style="width:500px; background: white; border-radius:15px"}
</center>
<br>
This above plot shows:

- 6 phyla are found in all samples.
- 3 phyla are present in S1 and S3 but not S2.
- 1 phylum is found in S2 that are not present in S1 or S3.
- There are a total of 25 phyla (4+2+1+3+6+3+6=10)

#### MCQs
<center>
![](/images/question_bubble_blue.png){style="width:150px"}
</center>

Please attempt the below MCQs based on the above venn diagram.

```{r, echo = FALSE}
opts_p <- c(answer="__3__", "__18__", "__6__")
```
1. How many phyla are present in S2 & S3 but not S1? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("__3__", "__18__", answer="__6__")
```
2. How many phyla are present in S3 but not S1 or S2? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("__3__", answer="__18__", "__6__")
```
3. How many total phyla are present in S3? `r longmcq(opts_p)`

### 4 way venn digram

Although venn diagrams can be nice, they become more difficult to parse as more sets are included.
Below is a 4 way venn diagram to demonstrate this.
It includes the same samples as the above venn diagram but with S4 added in.

```{r, echo=FALSE, warning=FALSE}
#Venn diagram
ggsave("images/4_way_venn.png", ggVennDiagram::ggVennDiagram(Phyla),
        device="png", units="mm", width=180, height=125, dpi=300)
```

<center>
![](images/4_way_venn.png){style="width:600px; background: white; border-radius:15px"}
</center>

### Upset plot

Instead of venn diagrams we can use upset plots.
Below is an upset plots made from the same data as the above 4 way venn diagram.
It consists of 2 parts:

- A bar chart of the number of phyla found in the intersections of samples.
- The intersections of samples displayed with dots and lines.

By default the order of the x-axis is ordered from frequency within the intersections.
I.e. from intersection with highest phyla count to lowest phyla count.

```{r, echo=FALSE, message=FALSE}
#Create long tibble of samples and phyla
#Numbers and seeds based on creating Phyla list (above) for ggVennDiagram()
set.seed(754628)
Samples <- c(rep("S1",15),rep("S2",12),rep("S3",18),rep("S4",14))
phyla <- letters
Phyla <- c(sample(phyla,15), sample(phyla,12),
            sample(phyla, 18), sample(phyla, 14))
set.seed(NULL)
#Create upset tibble
upset_tbl <- tibble::tibble(Samples,Phyla) |>
    #Group by phylum
    dplyr::group_by(Phyla) |>
    #Summarize to list the sample column
    dplyr::summarise(Samples = list(Samples))
#Create plot
upset_plot <- upset_tbl |>
    ggplot2::ggplot(aes(x=Samples)) +
    ggplot2::geom_bar() +
    ggupset::scale_x_upset() +
    ggplot2::labs(y="Phyla count")
ggplot2::ggsave("images/upset_plot.png", upset_plot,
        device="png", units="mm", width=150, height=100, dpi=300)
```

<center>
![](images/upset_plot.png){style="width:600px; background: white; border-radius:15px"}
</center>
<br>
The first three bars/columns of the above plot shows:

- S3 has 5 unique phyla.
- There are 4 phyla found in all the samples.
- S1 & S4 share four phyla not present in S2 or S3.

On important note is that intersections with values of 0 are not displayed in upset plots.

#### MCQs
<center>
![](/images/question_bubble_red.png){style="width:150px"}
</center>

Please attempt the below MCQs based on the above upset plot.

```{r, echo = FALSE}
opts_p <- c("__12__", "__0__", answer="__2__")
```
1. How many phyla are present in S1, S3, and S2 but not S4? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c("__12__", answer="__0__", "__2__")
```
2. How many phyla are only present in S4? `r longmcq(opts_p)`

```{r, echo = FALSE}
opts_p <- c(answer="__12__", "__0__", "__2__")
```
3. How many total phyla are present in S2? `r longmcq(opts_p)`

